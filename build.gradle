plugins {
    id 'java'
    id 'scala'
    id 'application'
    id "com.github.maiflai.scalatest" version "0.25"
    id 'com.github.johnrengelman.shadow' version "5.2.0"
}

ext {
    scala = '2.11.12'
    scalaMajorVersion = '2.11'
    scalaLoggingVersion = '3.9.2'

    scalaTestVersion = '3.0.1'
    pegdownVersion = '1.6.0'
    slf4jVersion = "1.7.21"

    sparkVersion = '2.4.4'

    igniteVersion = '2.7.6'

    cassandraVersion = '3.0.19'
    cassandraConnectorVersion = '2.4.2'
    cassandraDriverVerion = '3.6.0'
}

group 'com.gd'
version '1.0.4-SNAPSHOT'

//sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_1_8

mainClassName = 'com.gd.StopBotApp'

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "http://packages.confluent.io/maven/" }
    maven { url "http://repo.typesafe.com/typesafe/releases/" }
}

dependencies {
    shadow "org.scala-lang:scala-library:$scala"
    shadow "org.scala-lang:scala-reflect:$scala"
    shadow "org.scala-lang:scala-compiler:$scala"

    compile "com.typesafe.scala-logging:scala-logging_$scalaMajorVersion:$scalaLoggingVersion"
    compile("org.apache.ignite:ignite-spark:$igniteVersion-SPARK-$sparkVersion") {
        exclude group: "org.apache.spark"
        exclude group: "org.apache.hadoop"
    }

    shadow "org.apache.spark:spark-core_$scalaMajorVersion:$sparkVersion"
    shadow "org.apache.spark:spark-sql_$scalaMajorVersion:$sparkVersion"
    shadow "org.apache.spark:spark-streaming_$scalaMajorVersion:$sparkVersion"
    implementation("org.apache.spark:spark-sql-kafka-0-10_$scalaMajorVersion:$sparkVersion")

    implementation "com.datastax.cassandra:cassandra-driver-core:$cassandraDriverVerion"
    implementation("com.datastax.spark:spark-cassandra-connector_$scalaMajorVersion:$cassandraConnectorVersion") {
        exclude group: "org.scala-lang"
        exclude group: 'org.apache.spark'
    }

    testCompile "org.scalatest:scalatest_$scalaMajorVersion:$scalaTestVersion"
    testRuntime "org.pegdown:pegdown:$pegdownVersion"
    testRuntime "org.slf4j:slf4j-log4j12:$slf4jVersion"

    testCompile "org.scalatest:scalatest_$scalaMajorVersion:$scalaTestVersion"
}

configurations.testCompile {
    extendsFrom configurations.shadow
}
configurations.runtime {
    extendsFrom configurations.shadow
}

shadowJar {
    zip64 true
    mergeServiceFiles()
}

// Disable all distributions
distTar.enabled = false
distZip.enabled = false
shadowDistTar.enabled = false
shadowDistZip.enabled = false

// disable tests
//test.enabled = false
test.reports.html.enabled = true

apply from: 'docker.gradle'